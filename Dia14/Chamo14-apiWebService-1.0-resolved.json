{
  "openapi": "3.0.0",
  "info": {
    "title": "apiWebService",
    "description": "api que se aplica el CRUD a los usuarios de la base de datos",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/Chamo14/apiWebService/1.0",
      "description": "SwaggerHub API Auto Mocking"
    },
    {
      "url": "http://localhost:8080"
    }
  ],
  "tags": [
    {
      "name": "users",
      "description": "Este endpoint se encarga de gestionar toda la base de datos de los usuarios"
    }
  ],
  "paths": {
    "/api/users": {
      "get": {
        "tags": [
          "devolverUsuario"
        ],
        "summary": "Devuelve un usuario",
        "description": "Este metodo se encarga de devolver un usuario",
        "responses": {
          "200": {
            "description": "(OK) Servicio realizado de forma exitosa!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/users"
                }
              }
            }
          },
          "500": {
            "description": "(ServerError) error en el servidor"
          }
        }
      },
      "put": {
        "tags": [
          "updateUser"
        ],
        "summary": "edita un usuario",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/users"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "(OK) Servicio realizado de forma exitosa!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/users"
                }
              }
            }
          },
          "422": {
            "description": "(BadRequest) los datos enviados no son validos!"
          },
          "500": {
            "description": "(ServerError) error en el servidor"
          }
        }
      },
      "post": {
        "tags": [
          "crearUsuario"
        ],
        "summary": "Crea un nuevousuario",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/users"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "(OK) Servicio realizado de forma exitosa!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/users"
                }
              }
            }
          },
          "422": {
            "description": "(BadRequest) los datos enviados no son validos!"
          },
          "500": {
            "description": "(ServerError) error en el servidor"
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "summary": "Devuelve un usuario por id",
        "description": "Obtener un usuario por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(OK) Servicio realizado de forma exitosa!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/users"
                }
              }
            }
          },
          "422": {
            "description": "(BadRequest) los datos enviados no son validos!"
          },
          "500": {
            "description": "(ServerError) error en el servidor"
          }
        }
      },
      "delete": {
        "summary": "Elimina un usuario por id",
        "description": "Eliminar un usuario por id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(OK) Servicio realizado de forma exitosa!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/users"
                }
              }
            }
          },
          "422": {
            "description": "(BadRequest) los datos enviados no son validos!"
          },
          "500": {
            "description": "(ServerError) error en el servidor"
          }
        }
      }
    },
    "/api/users/listUsers": {
      "get": {
        "summary": "Devuelve todos los usuarios ",
        "description": "Obtener todos los usuarios",
        "responses": {
          "200": {
            "description": "(OK) Servicio realizado de forma exitosa!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/users"
                }
              }
            }
          },
          "422": {
            "description": "(BadRequest) los datos enviados no son validos!"
          },
          "500": {
            "description": "(ServerError) error en el servidor"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "users": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "id del usuario"
          },
          "name": {
            "type": "string",
            "description": "nombre del usuario"
          },
          "surname": {
            "type": "string",
            "description": "apellido del usuario"
          },
          "email": {
            "type": "string",
            "description": "email del usuario"
          },
          "enabled": {
            "type": "boolean",
            "description": "habilitacion del usuario"
          }
        }
      }
    },
    "responses": {
      "Unauthorized": {
        "description": "(Unauthorized) no tiene autorizacion al servicio"
      },
      "NotFound": {
        "description": "(NotFound) no se encontraron datos!"
      },
      "BadRequest": {
        "description": "(BadRequest) los datos enviados no son validos!"
      },
      "ServerError": {
        "description": "(ServerError) error en el servidor"
      }
    }
  }
}